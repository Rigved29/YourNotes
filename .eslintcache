[{"E:\\09-time-to-practice-starting-code\\src\\index.js":"1","E:\\09-time-to-practice-starting-code\\src\\App.js":"2","E:\\09-time-to-practice-starting-code\\src\\Pages\\AllQuotes.js":"3","E:\\09-time-to-practice-starting-code\\src\\Pages\\NewQuote.js":"4","E:\\09-time-to-practice-starting-code\\src\\Pages\\NotFound.js":"5","E:\\09-time-to-practice-starting-code\\src\\Pages\\QuoteDetail.js":"6","E:\\09-time-to-practice-starting-code\\src\\components\\layout\\Layout.js":"7","E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteList.js":"8","E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\HighlightedQuote.js":"9","E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteForm.js":"10","E:\\09-time-to-practice-starting-code\\src\\components\\comments\\Comments.js":"11","E:\\09-time-to-practice-starting-code\\src\\components\\layout\\MainNavigation.js":"12","E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteItem.js":"13","E:\\09-time-to-practice-starting-code\\src\\components\\comments\\NewCommentForm.js":"14","E:\\09-time-to-practice-starting-code\\src\\components\\UI\\Cad.js":"15","E:\\09-time-to-practice-starting-code\\src\\components\\UI\\LoadingSpinner.js":"16","E:\\09-time-to-practice-starting-code\\src\\customhooks\\usehttp.js":"17","E:\\09-time-to-practice-starting-code\\src\\context\\context.js":"18","E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\Decide.js":"19","E:\\09-time-to-practice-starting-code\\src\\components\\layout\\Footer.js":"20"},{"size":222,"mtime":1634471541139,"results":"21","hashOfConfig":"22"},{"size":1149,"mtime":1634498133529,"results":"23","hashOfConfig":"22"},{"size":2416,"mtime":1634498263445,"results":"24","hashOfConfig":"22"},{"size":995,"mtime":1634194403799,"results":"25","hashOfConfig":"22"},{"size":90,"mtime":1632147452000,"results":"26","hashOfConfig":"22"},{"size":2486,"mtime":1634498293771,"results":"27","hashOfConfig":"22"},{"size":426,"mtime":1634497482785,"results":"28","hashOfConfig":"22"},{"size":2414,"mtime":1634498202762,"results":"29","hashOfConfig":"22"},{"size":282,"mtime":1634194403802,"results":"30","hashOfConfig":"22"},{"size":2218,"mtime":1634495397152,"results":"31","hashOfConfig":"22"},{"size":698,"mtime":1634194403800,"results":"32","hashOfConfig":"22"},{"size":1390,"mtime":1634490907498,"results":"33","hashOfConfig":"22"},{"size":555,"mtime":1634498235505,"results":"34","hashOfConfig":"22"},{"size":2291,"mtime":1634194403800,"results":"35","hashOfConfig":"22"},{"size":155,"mtime":1634472144775,"results":"36","hashOfConfig":"22"},{"size":167,"mtime":1616596574000,"results":"37","hashOfConfig":"22"},{"size":796,"mtime":1632333607545,"results":"38","hashOfConfig":"22"},{"size":719,"mtime":1634495975077,"results":"39","hashOfConfig":"22"},{"size":242,"mtime":1634409847172,"results":"40","hashOfConfig":"22"},{"size":200,"mtime":1634497978000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"rzp5wq",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\09-time-to-practice-starting-code\\src\\index.js",[],["86","87"],"E:\\09-time-to-practice-starting-code\\src\\App.js",[],"E:\\09-time-to-practice-starting-code\\src\\Pages\\AllQuotes.js",["88","89"],"import QuoteList from \"../components/quotes/QuoteList\";\r\nimport { useEffect,useState } from \"react\";\r\nimport {quoteContext} from \"../context/context\";\r\nimport { useContext } from \"react\";\r\nimport Loader from \"../components/UI/LoadingSpinner\";\r\n\r\n\r\nconst AllQuotes = ()=>{\r\n    console.log(quoteContext);\r\n    const [ctxQ,ChangeStateCtxQ,initial,changeInitial] = useContext(quoteContext);\r\n    const [allQuotes,setAllQuotes] = useState([]);\r\n    const [error,setError] = useState(false);\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    \r\n\r\n\r\n    useEffect(()=>{\r\n        \r\n        const getQuotes = async()=>{\r\n            setIsLoading(true);\r\n            try{\r\n                const response = await fetch(\"https://react-router-eb1ed-default-rtdb.firebaseio.com/quotes.json\");\r\n                \r\n\r\n                const data = await response.json();\r\n\r\n                console.log(data);\r\n                setIsLoading(false);\r\n                let dataArr,arr;\r\n               if(response.ok){\r\n                dataArr = Object.values(data);\r\n                arr = [...dataArr]; \r\n                setAllQuotes(arr);\r\n               }\r\n                else if(!response.ok){\r\n                   throw new Error(\"Sorry not stable internet connection\")\r\n                   \r\n                }\r\n                \r\n            \r\n               const uniqueArr = [...new Set(arr)];\r\n\r\n\r\n            if(initial){\r\n              \r\n                ChangeStateCtxQ({\r\n                    Quotes:uniqueArr,  \r\n                });\r\n\r\n                changeInitial(false);\r\n\r\n            }\r\n          \r\n        }catch(err){\r\n            setIsLoading(false);\r\n            console.log(`I think your internet is not working: ${err}`)\r\n            setError(true);\r\n        }\r\n    }\r\n     \r\n    getQuotes();\r\n\r\n        \r\n        const date = new Date('July 20, 2020');\r\n        console.log(date,\"time:\",date.getTime(),\"day:\",date.getDate(),\"year:\",date.getFullYear());\r\n        console.log(date.toLocaleDateString());\r\n\r\n    },[]);\r\n\r\n    return <div>\r\n          {!error && !isLoading && allQuotes.length!==0 && <QuoteList quotes={allQuotes}/>}  {/*initial?allQuotes:ctxQ.Quotes*/}\r\n          {error && !isLoading && allQuotes.length===0 && <h1>No Notes Found!! Check Your Internet ConnectionðŸ˜ŒðŸ˜Œ</h1>}\r\n          {!error && isLoading && allQuotes.length===0 && <Loader/>}\r\n        </div>\r\n}\r\n\r\nexport default AllQuotes;","E:\\09-time-to-practice-starting-code\\src\\Pages\\NewQuote.js",[],"E:\\09-time-to-practice-starting-code\\src\\Pages\\NotFound.js",[],"E:\\09-time-to-practice-starting-code\\src\\Pages\\QuoteDetail.js",["90"],"import {Link, Route, useParams, useRouteMatch} from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport {quoteContext} from \"../context/context\";\r\nimport {useEffect, useContext,useState} from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst QuotesDetail = (props)=>{\r\nconst [ctxQ] = useContext(quoteContext);\r\nconsole.log(props.uId);\r\nconst [q,setQ] = useState({});\r\n\r\nconst history = useHistory();\r\n\r\nconsole.log(ctxQ,\"hello bhaiya\");\r\n const quoteArr = Object.values(ctxQ.Quotes);\r\n \r\n console.log(quoteArr);\r\n\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  console.log(typeof params.quoteId);\r\n\r\n  console.log(match);\r\n  console.log(quoteArr,params);\r\n\r\nconst quote = quoteArr.find(q=>q.id === Number(params.quoteId));\r\nconsole.log(quote);\r\n\r\n\r\nconsole.log(localStorage.getItem(params.quoteId));\r\n\r\nconst uniqueID = localStorage.getItem(params.quoteId);\r\nconsole.log(uniqueID);\r\n\r\n\r\n  useEffect(()=>{\r\n  \r\n    const getQuote = async()=>{\r\n\r\n      console.log(quote,uniqueID);\r\n\r\n    const response = await fetch(`https://react-router-eb1ed-default-rtdb.firebaseio.com/quotes/${uniqueID}.json`)\r\n    const  data = await response.json();\r\n    console.log(data);\r\n    setQ(data);\r\n\r\n    }\r\n\r\n\r\n    getQuote();\r\n\r\n  },[quote,uniqueID]);\r\n\r\nconst deleteNoteHandler =()=>{\r\n\r\n  const deleteNote = async()=>{\r\n\r\n    console.log(quote,uniqueID);\r\n\r\n  const response = await fetch(`https://react-router-eb1ed-default-rtdb.firebaseio.com/quotes/${uniqueID}.json`,{\r\n    method:\"DELETE\",\r\n    headers:{\"Content-Type\":\"application/json\"},\r\n  })\r\n  const  data = await response.json();\r\n\r\n\r\n  }\r\n\r\n  history.push(\"/quotes\");\r\n\r\n  deleteNote()\r\n}\r\n\r\nif(!quote){\r\n  return <h2>No quote Found</h2>\r\n}\r\n\r\nconsole.log(q);\r\n\r\n    return (\r\n        <div>\r\n         <HighlightedQuote text={quote.text} author={quote.author}/>\r\n         <Route path={match.path} exact>\r\n             \r\n         <div className=\"left\">\r\n         <Link to={`${match.url}/comments`} className=\"btn--flat\">Edit Your Note</Link>\r\n         </div>\r\n\r\n\r\n         </Route>\r\n         \r\n          <Route path={`${match.path}/comments`}>\r\n                <Comments text={quote.text} author={quote.author} uID={uniqueID}/>\r\n          </Route>\r\n\r\n          <button onClick={deleteNoteHandler} className=\"centered\">Delete</button>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default QuotesDetail;","E:\\09-time-to-practice-starting-code\\src\\components\\layout\\Layout.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteList.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\HighlightedQuote.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteForm.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\comments\\Comments.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\layout\\MainNavigation.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteItem.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\comments\\NewCommentForm.js",["91"],"import { useEffect, useRef,useState } from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport classes from './NewCommentForm.module.css';\r\n\r\nconst NewCommentForm = (props) => {\r\nconst [topicState,setTopicState] = useState(\"\");\r\nconst [textState,setTextState] = useState(\"\");\r\n\r\n  const textRef = useRef();\r\n  const topicRef = useRef();\r\n\r\n  const history = useHistory();\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n      console.log(props.uID);\r\n    const submitEdit = async() =>{\r\n\r\n      const response = await fetch(`https://react-router-eb1ed-default-rtdb.firebaseio.com/quotes/${props.uID}.json`,{\r\n        method:\"PATCH\",\r\n        body:JSON.stringify({author:topicState,text:textState,date:(new Date())}),\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      console.log(response)\r\n      const data = await response.json();\r\n\r\n      console.log(data);\r\n\r\n    }\r\n\r\n    // optional: Could validate here\r\n    if(topicState!==\"\"&& textState!==\"\"){\r\n      console.log({topic:topicState,text:textState});\r\n\r\n      submitEdit();\r\n\r\n    }\r\n      history.push(\"/quotes\")\r\n    // send comment to server\r\n  };\r\n  console.log(props.author,props.text);\r\n\r\n  // setTopicState(props.author);\r\n  // setTextState(props.text);\r\n const topicHandler =(e)=>{\r\n    console.log(topicRef.current.value);\r\n    setTopicState(topicRef.current.value);\r\n }\r\n\r\n const textHandler = (e)=>{\r\n  console.log(textRef.current.value);\r\n  setTextState(textRef.current.value);\r\n }\r\n\r\n\r\n  useEffect(()=>{\r\n    setTopicState(props.author);\r\n    setTextState(props.text);\r\n  },[])\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitFormHandler}>\r\n      <div className={classes.control} onSubmit={submitFormHandler}>\r\n        <label htmlFor='comment'>Topic</label>\r\n        <textarea id='comment' rows='2' ref={topicRef} value={topicState} className={classes.m} onChange={topicHandler}></textarea>\r\n        <label htmlFor='comment'>Text</label>\r\n        <textarea id='comment' rows='5' ref={textRef} value={textState}onChange={textHandler}></textarea>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className='btn'>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewCommentForm;\r\n","E:\\09-time-to-practice-starting-code\\src\\components\\UI\\Cad.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\UI\\LoadingSpinner.js",[],"E:\\09-time-to-practice-starting-code\\src\\customhooks\\usehttp.js",["92","93","94","95"],"E:\\09-time-to-practice-starting-code\\src\\context\\context.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\quotes\\Decide.js",[],"E:\\09-time-to-practice-starting-code\\src\\components\\layout\\Footer.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":10,"column":12,"nodeType":"102","messageId":"103","endLine":10,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":68,"column":7,"nodeType":"106","endLine":68,"endColumn":9,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":66,"column":10,"nodeType":"102","messageId":"103","endLine":66,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":62,"column":5,"nodeType":"106","endLine":62,"endColumn":7,"suggestions":"110"},{"ruleId":"100","severity":1,"message":"111","line":7,"column":12,"nodeType":"102","messageId":"103","endLine":7,"endColumn":21},{"ruleId":"100","severity":1,"message":"112","line":17,"column":12,"nodeType":"102","messageId":"103","endLine":17,"endColumn":22},{"ruleId":"113","severity":2,"message":"114","line":39,"column":13,"nodeType":"102","messageId":"115","endLine":39,"endColumn":18},{"ruleId":"113","severity":2,"message":"116","line":39,"column":19,"nodeType":"102","messageId":"115","endLine":39,"endColumn":27},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'ctxQ' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ChangeStateCtxQ', 'changeInitial', and 'initial'. Either include them or remove the dependency array.","ArrayExpression",["119"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.author' and 'props.text'. Either include them or remove the dependency array. If 'setTopicState' needs the current value of 'props.author', you can also switch to useReducer instead of useState and read 'props.author' in the reducer.",["120"],"'getQuotes' is assigned a value but never used.","'postQuotes' is assigned a value but never used.","no-undef","'stats' is not defined.","undef","'setStats' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [ChangeStateCtxQ, changeInitial, initial]",{"range":"125","text":"126"},"Update the dependencies array to be: [props.author, props.text]",{"range":"127","text":"128"},[2019,2021],"[ChangeStateCtxQ, changeInitial, initial]",[1626,1628],"[props.author, props.text]"]